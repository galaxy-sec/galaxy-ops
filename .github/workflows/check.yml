name: check
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Check fix
        run: cargo fix && cargo fix
      - name: Check with clippy
        run: cargo clippy  --all-features -- -D warnings
      - name: Build Release
        run: cargo build --release
      - name: Run tests
        run: cargo test
      - uses: dtolnay/rust-toolchain@v1
        with:
          target: riscv32imc-unknown-none-elf
          toolchain: stable
          components: rust-src
  test:
    strategy:
      matrix:
        rust: [ stable, beta ]
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust }}
      - name: Install Tarpaulin
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: 0.31.5
          use-tool-cache: true
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          cargo test --all-features
          cargo test --examples
      - name: Coverage
        if: matrix.rust == 'stable'
        run: cargo tarpaulin -o Lcov --output-dir ./coverage
      - name: Coveralls
        if: matrix.rust == 'stable'
        continue-on-error: true
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
